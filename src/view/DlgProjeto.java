package view;

import controller.ClienteCTRL;
import controller.InversorCTRL;
import controller.ItemProjetoCTRL;
import controller.ModuloCTRL;
import controller.ProjetoCTRL;
import controller.StatusCTRL;
import java.sql.Date;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultCellEditor;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import model.bean.Cliente;
import model.bean.Inversor;
import model.bean.ItemProjeto;
import model.bean.Modulo;
import model.bean.Projeto;
import model.bean.Status;
import utils.IconManager;
import utils.Utilitarios;

/**
 *
 * @author KAI
 */
public /*final*/ class DlgProjeto extends javax.swing.JDialog {

    private Projeto projeto;
    private List<ItemProjeto> itensProjeto = new ArrayList<>();

    private boolean FirstRun = true;

    private int IdModulo = 0;
    private int IdInversor = 0;

    private Cliente clienteProjeto;

    /**
     * Creates new form DlgProjeto
     *
     * @param parent
     * @param modal
     */
    public DlgProjeto(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
//        this.WidthJTableItens = tblItens.getWidth();
        initComponents();
        setIcon();
    }

    public DlgProjeto(java.awt.Frame parent, boolean modal, Projeto pProjeto) {
        super(parent, modal);
        initComponents();
        this.setProjeto(pProjeto);
        this.IniciaForm();

        FirstRun = false;
        setIcon();
    }

    private void setIcon() {
        this.setIconImage(new ImageIcon(getClass().getResource("/image/solar-energy.png")).getImage());
    }

    public Projeto getProjeto() {
        return projeto;
    }

    public void setProjeto(Projeto pProjeto) {
        this.projeto = pProjeto;

        this.PopulaComponentesComProjeto();
        if (FirstRun) {
//            this.setUnidadesConsumidoras(UnidadeConsumidoraCTRL.BuscarPorEndereco(this.projeto));
            this.setItensProjeto(ItemProjetoCTRL.BuscarPorProjeto(this.projeto));
            this.PopulaJTable_ItensProjeto();
        }
    }

    public List<ItemProjeto> getItensProjeto() {
        return itensProjeto;
    }

    public void setItensProjeto(List<ItemProjeto> itensProjeto) {
        this.itensProjeto = itensProjeto;
    }

    public Cliente getClienteProjeto() {
        return clienteProjeto;
    }

    public void setClienteProjeto(Cliente clienteProjeto) {
        this.clienteProjeto = clienteProjeto;
        System.out.println(this.clienteProjeto.toString());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMain = new javax.swing.JPanel();
        pnlBotoes = new javax.swing.JPanel();
        btnGravar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        pnlIdentificacaoProjeto = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtId = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        txtDataCadastro = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        txtDataUltimaAlteracao = new com.toedter.calendar.JDateChooser();
        cmbxStatus = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        txtCliente = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        btnBuscarCliente = new javax.swing.JButton();
        cmbxCliente = new javax.swing.JComboBox<>();
        pnlValores = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txtProdutos = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        txtAcrescimos = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        txtDescontos = new javax.swing.JFormattedTextField();
        jLabel11 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JFormattedTextField();
        pnlDatas = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtPrevisaoEntrega = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        txtDataConclusao = new com.toedter.calendar.JDateChooser();
        tpProjeto = new javax.swing.JTabbedPane();
        pnlProdutos = new javax.swing.JPanel();
        pnlItensProjeto = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblItens = new javax.swing.JTable();
        btnAdicionarInversor = new javax.swing.JButton();
        btnRemoverItemProjeto = new javax.swing.JButton();
        btnAdicionarModulo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Projeto");
        setResizable(false);

        pnlMain.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        pnlBotoes.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnGravar.setText("Gravar");
        btnGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGravarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBotoesLayout = new javax.swing.GroupLayout(pnlBotoes);
        pnlBotoes.setLayout(pnlBotoesLayout);
        pnlBotoesLayout.setHorizontalGroup(
            pnlBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnGravar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlBotoesLayout.setVerticalGroup(
            pnlBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnGravar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancelar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlIdentificacaoProjeto.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Id:");

        txtId.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtId.setEnabled(false);

        jLabel2.setText("Data Cadastro:");

        txtDataCadastro.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtDataCadastro.setDateFormatString("dd/MM/yyyy HH:mm:ss");
        txtDataCadastro.setEnabled(false);

        jLabel4.setText("Data Última Alteração:");

        txtDataUltimaAlteracao.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtDataUltimaAlteracao.setDateFormatString("dd/MM/yyyy HH:mm:ss");
        txtDataUltimaAlteracao.setEnabled(false);

        jLabel7.setText("Status:");

        txtCliente.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtCliente.setEnabled(false);

        jLabel3.setText("Cliente:");

        btnBuscarCliente.setText("Buscar Cliente");
        btnBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarClienteActionPerformed(evt);
            }
        });

        cmbxCliente.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbxClienteItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout pnlIdentificacaoProjetoLayout = new javax.swing.GroupLayout(pnlIdentificacaoProjeto);
        pnlIdentificacaoProjeto.setLayout(pnlIdentificacaoProjetoLayout);
        pnlIdentificacaoProjetoLayout.setHorizontalGroup(
            pnlIdentificacaoProjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlIdentificacaoProjetoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlIdentificacaoProjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlIdentificacaoProjetoLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDataCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlIdentificacaoProjetoLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(cmbxCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(pnlIdentificacaoProjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlIdentificacaoProjetoLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4))
                    .addGroup(pnlIdentificacaoProjetoLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(btnBuscarCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlIdentificacaoProjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlIdentificacaoProjetoLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbxStatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(txtDataUltimaAlteracao, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        pnlIdentificacaoProjetoLayout.setVerticalGroup(
            pnlIdentificacaoProjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlIdentificacaoProjetoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlIdentificacaoProjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(txtDataUltimaAlteracao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtDataCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlIdentificacaoProjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel3)
                    .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarCliente)
                    .addComponent(jLabel7)
                    .addComponent(cmbxStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbxCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlIdentificacaoProjetoLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel2, txtDataCadastro});

        pnlIdentificacaoProjetoLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel4, txtDataUltimaAlteracao});

        pnlIdentificacaoProjetoLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnBuscarCliente, cmbxStatus, jLabel3, jLabel7, txtCliente});

        pnlValores.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlValores.setToolTipText("Totais");

        jLabel10.setText("Produtos:");

        txtProdutos.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtProdutos.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtProdutos.setEnabled(false);

        jLabel5.setText("Acréscimos:");

        txtAcrescimos.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));

        jLabel8.setText("Descontos:");

        txtDescontos.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));

        jLabel11.setText("Total:");

        txtTotal.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtTotal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtTotal.setEnabled(false);
        txtTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlValoresLayout = new javax.swing.GroupLayout(pnlValores);
        pnlValores.setLayout(pnlValoresLayout);
        pnlValoresLayout.setHorizontalGroup(
            pnlValoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlValoresLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtAcrescimos, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDescontos, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTotal)
                .addContainerGap())
        );
        pnlValoresLayout.setVerticalGroup(
            pnlValoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlValoresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlValoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlValoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlValoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(txtProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(txtAcrescimos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8)
                        .addComponent(txtDescontos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlDatas.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel6.setText("Previsão Entrega:");

        jLabel9.setText("Conclusão:");

        javax.swing.GroupLayout pnlDatasLayout = new javax.swing.GroupLayout(pnlDatas);
        pnlDatas.setLayout(pnlDatasLayout);
        pnlDatasLayout.setHorizontalGroup(
            pnlDatasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPrevisaoEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDataConclusao, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlDatasLayout.setVerticalGroup(
            pnlDatasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDatasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(txtPrevisaoEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlDatasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel9)
                        .addComponent(txtDataConclusao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlItensProjeto.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tblItens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblItens);

        btnAdicionarInversor.setText("Adicionar Inversor");
        btnAdicionarInversor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarInversorActionPerformed(evt);
            }
        });

        btnRemoverItemProjeto.setText("Remover");

        btnAdicionarModulo.setText("Adicionar Módulo");
        btnAdicionarModulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarModuloActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlItensProjetoLayout = new javax.swing.GroupLayout(pnlItensProjeto);
        pnlItensProjeto.setLayout(pnlItensProjetoLayout);
        pnlItensProjetoLayout.setHorizontalGroup(
            pnlItensProjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlItensProjetoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlItensProjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 716, Short.MAX_VALUE)
                    .addGroup(pnlItensProjetoLayout.createSequentialGroup()
                        .addComponent(btnAdicionarInversor, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdicionarModulo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRemoverItemProjeto, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlItensProjetoLayout.setVerticalGroup(
            pnlItensProjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlItensProjetoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlItensProjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlItensProjetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAdicionarInversor)
                        .addComponent(btnAdicionarModulo))
                    .addComponent(btnRemoverItemProjeto))
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlProdutosLayout = new javax.swing.GroupLayout(pnlProdutos);
        pnlProdutos.setLayout(pnlProdutosLayout);
        pnlProdutosLayout.setHorizontalGroup(
            pnlProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProdutosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlItensProjeto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlProdutosLayout.setVerticalGroup(
            pnlProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProdutosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlItensProjeto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tpProjeto.addTab("Itens do Projeto", pnlProdutos);

        javax.swing.GroupLayout pnlMainLayout = new javax.swing.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tpProjeto, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(pnlValores, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addComponent(pnlIdentificacaoProjeto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pnlBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnlDatas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlIdentificacaoProjeto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlValores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlDatas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tpProjeto)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGravarActionPerformed
        this.GravarProjeto();
    }//GEN-LAST:event_btnGravarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalActionPerformed

    private void btnBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarClienteActionPerformed
        this.PesquisaCliente();
//        DlgPesquisaEntidade dlg = new DlgPesquisaEntidade(null, true, Cliente.class, new String[]{"Nome", "Id"}, new String[]{"Id", "Razãp Social / Nome", "Tipo", "CNPJ / CPF", "Status"}, true);
//        dlg.setVisible(true);
//        dlg.toFront();
//
//        if (dlg.IdSelecionado > 0) {
//            this.getProjeto().setCliente(ClienteCTRL.BuscarPorId(0, dlg.IdSelecionado, null));
//            txtCliente.setText(this.getProjeto().getCliente().toString());
//        }
    }//GEN-LAST:event_btnBuscarClienteActionPerformed

    private void btnAdicionarInversorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarInversorActionPerformed
        DlgPesquisaEntidade dlg = new DlgPesquisaEntidade(null, true,
                Inversor.class,
                new String[]{"XModelo"},
                new String[]{"XId", "XModelo", "XStatus"},
                true);
        dlg.setVisible(true);
        dlg.toFront();
        if (dlg.getIdSelecionado() > 0) {
            IdInversor = dlg.getIdSelecionado();
            IdModulo = 0;
            this.AdicionarItemProjeto(IdInversor, Inversor.class);
        }

    }//GEN-LAST:event_btnAdicionarInversorActionPerformed

    private void btnAdicionarModuloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarModuloActionPerformed
        DlgPesquisaEntidade dlg = new DlgPesquisaEntidade(null, true,
                Modulo.class,
                new String[]{"XModeloX", "XDescriçãoX"},
                new String[]{"XIdX", "XModelo", "XStatusX"},
                true);
        dlg.setVisible(true);
        dlg.toFront();
        if (dlg.getIdSelecionado() > 0) {
            IdInversor = 0;
            IdModulo = dlg.getIdSelecionado();
            this.AdicionarItemProjeto(IdModulo, Modulo.class);
        }
    }//GEN-LAST:event_btnAdicionarModuloActionPerformed

    private void cmbxClienteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbxClienteItemStateChanged
        if ((cmbxCliente.getSelectedItem() instanceof Cliente) && cmbxCliente.getSelectedItem() != null) {
            this.setClienteProjeto((Cliente) cmbxCliente.getSelectedItem());
        }
    }//GEN-LAST:event_cmbxClienteItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DlgProjeto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            DlgProjeto dialog = new DlgProjeto(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarInversor;
    private javax.swing.JButton btnAdicionarModulo;
    private javax.swing.JButton btnBuscarCliente;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGravar;
    private javax.swing.JButton btnRemoverItemProjeto;
    private javax.swing.JComboBox<model.bean.Cliente> cmbxCliente;
    private javax.swing.JComboBox<model.bean.Status> cmbxStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel pnlBotoes;
    private javax.swing.JPanel pnlDatas;
    private javax.swing.JPanel pnlIdentificacaoProjeto;
    private javax.swing.JPanel pnlItensProjeto;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JPanel pnlProdutos;
    private javax.swing.JPanel pnlValores;
    private javax.swing.JTable tblItens;
    private javax.swing.JTabbedPane tpProjeto;
    private javax.swing.JFormattedTextField txtAcrescimos;
    private javax.swing.JFormattedTextField txtCliente;
    private com.toedter.calendar.JDateChooser txtDataCadastro;
    private com.toedter.calendar.JDateChooser txtDataConclusao;
    private com.toedter.calendar.JDateChooser txtDataUltimaAlteracao;
    private javax.swing.JFormattedTextField txtDescontos;
    private javax.swing.JFormattedTextField txtId;
    private com.toedter.calendar.JDateChooser txtPrevisaoEntrega;
    private javax.swing.JFormattedTextField txtProdutos;
    private javax.swing.JFormattedTextField txtTotal;
    // End of variables declaration//GEN-END:variables

    private void IniciaForm() {
        StatusCTRL.BuscaTodos().forEach((Status sts) -> {
            cmbxStatus.addItem(sts);
        });
        cmbxStatus.setSelectedIndex(0);
//        this.PopulaComponentesComProjeto();
        cmbxCliente.setEditable(true);

        new IconManager().SetaIcones(new JButton[]{btnGravar, btnCancelar});
    }

    private void PopulaComponentesComProjeto() {

        txtId.setText(String.valueOf(this.getProjeto().getId()));
        txtDataCadastro.setDate(this.getProjeto().getDataCadastro());
        txtDataUltimaAlteracao.setDate(this.getProjeto().getDataUltimaAlteracao());
        if (this.getProjeto().getCliente() != null) {
            txtCliente.setText(this.getProjeto().getCliente().getRazaoSocial_Nome());
        }
        if (this.getProjeto().getStatus() != null) {
            Utilitarios.SetItemSelectedComboBox(new JComboBox[]{cmbxStatus}, new String[]{this.getProjeto().getStatus().getDescricao()});
        }
        txtProdutos.setText(String.valueOf(this.getProjeto().getTotalProdutos()).replace(",", "").replace(".", ","));
        txtAcrescimos.setText(String.valueOf(this.getProjeto().getAcrescimo()).replace(",", "").replace(".", ","));
        txtDescontos.setText(String.valueOf(this.getProjeto().getDesconto()).replace(",", "").replace(".", ","));
        txtTotal.setText(String.valueOf(this.getProjeto().getTotalLiquido()).replace(",", "").replace(".", ","));
        txtPrevisaoEntrega.setDate(this.getProjeto().getPrevisaoEntrega());
        txtDataConclusao.setDate(this.getProjeto().getConclusao());

    }

    private void GravarProjeto() {
        this.PopulaObjetoProjetoComComponentes();
        this.setProjeto(ProjetoCTRL.Gravar(this.getProjeto()));

        this.Persistir_ItensProjeto();
    }

    private void Persistir_ItensProjeto() {
        this.itensProjeto.removeAll(this.itensProjeto);
        List<ItemProjeto> IPs = new ArrayList<>();
        for (int i = 0; i < tblItens.getRowCount(); i++) {
            int z = 0;
            ItemProjeto ip = new ItemProjeto();
            ip.setId((int) tblItens.getValueAt(i, z++));

            int idM = Integer.valueOf(String.valueOf(tblItens.getValueAt(i, z++)));
            if (idM > 0) {
                ip.setModulo(ModuloCTRL.BuscaPorId(idM));
            }
            z++;
            int idI = Integer.valueOf(String.valueOf(tblItens.getValueAt(i, z++)));
            if (idI > 0) {
                ip.setInversor(InversorCTRL.BuscaPorId(idI));
            }
            z++;

            ip.setQuantidade(Integer.valueOf(String.valueOf(tblItens.getValueAt(i, z++))));
            ip.setValorUnitario(Utilitarios.ConverteTextoEmDouble(String.valueOf(tblItens.getValueAt(i, z++))));
            ip.setProjeto(projeto);
            IPs.add(ip);
        }
        IPs.forEach((ItemProjeto ip) -> {
            ItemProjetoCTRL.Grava(ip);
        });
        this.setItensProjeto(ItemProjetoCTRL.BuscarPorProjeto(this.getProjeto()));
        this.PopulaJTable_ItensProjeto();
    }

    private void PopulaObjetoProjetoComComponentes() {
        if (!this.getProjeto().IsNew()) {
            this.getProjeto().setId(Integer.parseInt(txtId.getText()));
        }
        this.getProjeto().setDesconto(Utilitarios.ConverteTextoEmDouble(txtDescontos.getText()));
        this.getProjeto().setAcrescimo(Utilitarios.ConverteTextoEmDouble(txtAcrescimos.getText()));
        if (txtPrevisaoEntrega.getDate() != null) {
            this.getProjeto().setPrevisaoEntrega(new Date(txtPrevisaoEntrega.getDate().getYear(), txtPrevisaoEntrega.getDate().getMonth(), txtPrevisaoEntrega.getDate().getDay()));
        }
        if (txtDataConclusao.getDate() != null) {
            this.getProjeto().setConclusao(new Date(txtDataConclusao.getDate().getYear(), txtDataConclusao.getDate().getMonth(), txtDataConclusao.getDate().getDay()));
        }
        this.getProjeto().setStatus((Status) cmbxStatus.getSelectedItem());
    }

    private void PopulaJTable_ItensProjeto() {
        int ContRecord = this.getItensProjeto() != null ? (!this.getItensProjeto().isEmpty() ? this.getItensProjeto().size() : 0) : 0;
        String[] ColunasTabela = new String[]{"Id", "Id.M", "Módulo", "Id.I", "Inversor", "Qtde", "Valor", /*"Total"*/};
        Object[][] dados = new Object[ContRecord][ColunasTabela.length];
        for (int linha = 0; linha < ContRecord; linha++) {
            int coluna = 0;
            dados[linha][coluna++] = this.itensProjeto.get(linha).getId();
            if (this.itensProjeto.get(linha).getModulo() != null) {
                dados[linha][coluna++] = this.itensProjeto.get(linha).getModulo().getId();
                dados[linha][coluna++] = this.itensProjeto.get(linha).getModulo().getModelo();
            } else {
                dados[linha][coluna++] = "0";
                dados[linha][coluna++] = "-";
            }
            if (this.itensProjeto.get(linha).getInversor() != null) {
                dados[linha][coluna++] = this.itensProjeto.get(linha).getInversor().getId();
                dados[linha][coluna++] = this.itensProjeto.get(linha).getInversor().getModelo();
            } else {
                dados[linha][coluna++] = "0";
                dados[linha][coluna++] = "-";
            }
            dados[linha][coluna++] = String.valueOf(this.itensProjeto.get(linha).getQuantidade());
            dados[linha][coluna++] = String.valueOf(this.itensProjeto.get(linha).getValorUnitario()).replace(",", "").replace(".", ",");
//            dados[linha][coluna++] = this.itensProjeto.get(linha).getValorTotal();
        }
        DefaultTableModel mdl = new DefaultTableModel(dados, ColunasTabela) {
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, true, true
            };

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        };
        tblItens.setModel(mdl);
        tblItens.setAutoCreateRowSorter(true);
        tblItens.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tblItens.setShowGrid(true);
        tblItens.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
//         0     0a      1         2a      2           3       4        5
//        "Id", "Id.M", "Módulo", "Id.I", "Inversor", "Qtde", "Valor", "Total"
        int cw00 = (int) (tblItens.getParent().getWidth() * 0.05);
        int cw0a = (int) (tblItens.getParent().getWidth() * 0.04);
        int cw10 = (int) (tblItens.getParent().getWidth() * 0.35);
        int cw2a = cw0a;
        int cw20 = cw10;
        int cw30 = (int) (tblItens.getParent().getWidth() * 0.06);
        int cw40 = (int) (tblItens.getParent().getWidth() * 0.09);
//        int cw50 = (int) (tblItens.getWidth() * 0.11);

        javax.swing.JFormattedTextField txtDouble = new javax.swing.JFormattedTextField();
        txtDouble.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));

        javax.swing.JFormattedTextField txtInt = new javax.swing.JFormattedTextField();
        txtInt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        int x = 0;
        tblItens.getColumnModel().getColumn(x++).setPreferredWidth(cw00);
        tblItens.getColumnModel().getColumn(x++).setPreferredWidth(cw0a);
        tblItens.getColumnModel().getColumn(x++).setPreferredWidth(cw10);
        tblItens.getColumnModel().getColumn(x++).setPreferredWidth(cw2a);
        tblItens.getColumnModel().getColumn(x++).setPreferredWidth(cw20);

        tblItens.getColumnModel().getColumn(x++).setPreferredWidth(cw30);
        tblItens.getColumnModel().getColumn(x).setCellEditor(new DefaultCellEditor(txtInt));

        tblItens.getColumnModel().getColumn(x++).setPreferredWidth(cw40);
//        tblItens.getColumnModel().getColumn(x).setCellEditor(new DefaultCellEditor(txtDouble));
//        tblItens.getColumnModel().getColumn(x++).setPreferredWidth(cw50);
//        tblItens.getColumnModel().getColumn(x).setCellEditor(new DefaultCellEditor(txtDouble));

    }

    private void AdicionarItemProjeto(int pId, Class pClasse) {

        List<ItemProjeto> itens = new ArrayList<>();
        this.itensProjeto.removeAll(this.itensProjeto);
        for (int i = 0; i < tblItens.getRowCount(); i++) {
            int z = 0;
            ItemProjeto ip = new ItemProjeto();
            ip.setId(Integer.valueOf(String.valueOf(tblItens.getValueAt(i, z++))));

            int idM = Integer.valueOf(String.valueOf(tblItens.getValueAt(i, z++)));
            if (idM > 0) {
                ip.setModulo(ModuloCTRL.BuscaPorId(idM));
            }
//            z++;
            z++;
            int idI = Integer.valueOf(String.valueOf(tblItens.getValueAt(i, z++)));
            if (idI > 0) {
                ip.setInversor(InversorCTRL.BuscaPorId(idI));
            }
//            z++;
            z++;

            ip.setQuantidade(Integer.parseInt(String.valueOf(tblItens.getValueAt(i, z++))));
            ip.setValorUnitario(Utilitarios.ConverteTextoEmDouble(String.valueOf(tblItens.getValueAt(i, z++))));

            itens.add(ip);
        }

        ItemProjeto ip_ = new ItemProjeto();
        ip_.setQuantidade(1);
        if (pClasse == Inversor.class) {
            ip_.setInversor(InversorCTRL.BuscaPorId(pId));
            ip_.setValorUnitario(ip_.getInversor().getValorVenda());
        } else if (pClasse == Modulo.class) {
            ip_.setModulo(ModuloCTRL.BuscaPorId(pId));
            ip_.setValorUnitario(ip_.getModulo().getValorVenda());
        }
        itens.add(ip_);

        this.setItensProjeto(itens);
        this.PopulaJTable_ItensProjeto();
    }

    private void PesquisaCliente() {
        List<Cliente> listClientes = new ArrayList<>();
        if (cmbxCliente.getSelectedItem() != null) {
            if (cmbxCliente.getSelectedItem().toString().trim().length() > 0) {
                listClientes = ClienteCTRL.BuscarPorNome(100, cmbxCliente.getSelectedItem().toString(), null);
            }
        }
        cmbxCliente.removeAllItems();
        listClientes.forEach((Cliente clnt) -> {
            cmbxCliente.addItem(clnt);
        });
    }
}
