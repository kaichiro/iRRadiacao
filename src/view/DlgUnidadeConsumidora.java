/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.UnidadeConsumidoraCTRL;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultCellEditor;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import model.bean.Endereco;
import model.bean.UnidadeConsumidora;
import utils.Enumeradors;
import utils.Utilitarios;

/**
 *
 * @author KAI
 */
public class DlgUnidadeConsumidora extends javax.swing.JDialog {

    private Endereco endereco;
    private boolean FirstRun = true;
    private List<UnidadeConsumidora> unidadesConsumidoras = new ArrayList<>();

    /**
     * Creates new form DlgUnidadeConsumidora
     *
     * @param parent
     * @param modal
     */
    public DlgUnidadeConsumidora(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public DlgUnidadeConsumidora(java.awt.Frame parent, boolean modal, Endereco pEndereco) {
        super(parent, modal);
        initComponents();
        this.endereco = pEndereco;
        this.InicialFormulario();
        this.FirstRun = false;
    }

    public List<UnidadeConsumidora> getUnidadesConsumidoras() {
        return unidadesConsumidoras;
    }

    public void setUnidadesConsumidoras(List<UnidadeConsumidora> pUnidadesConsumidoras) {
        if (this.FirstRun) {
            this.unidadesConsumidoras = UnidadeConsumidoraCTRL.BuscarPorEndereco(this.endereco);
        } else if (pUnidadesConsumidoras != null) {
            this.unidadesConsumidoras = pUnidadesConsumidoras;
        }

        this.PopulaJTableUnidadesConsumidoras();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlUnidadesConsumidoras = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUC = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        pnlBotoes = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        btnIncluirUnidadeConsumidora = new javax.swing.JButton();
        btnGravarUnidadeConsumidora = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Unidades Consumidoras");
        setResizable(false);

        pnlUnidadesConsumidoras.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tblUC.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblUC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblUCMouseClicked(evt);
            }
        });
        tblUC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblUCKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblUC);

        jLabel13.setText("Clique duas vezes ou tecle ENTER no registro abaixo (unidade consumidora) para abrir o cadastro de Consumos Energéticos (faturas de energia).");

        javax.swing.GroupLayout pnlUnidadesConsumidorasLayout = new javax.swing.GroupLayout(pnlUnidadesConsumidoras);
        pnlUnidadesConsumidoras.setLayout(pnlUnidadesConsumidorasLayout);
        pnlUnidadesConsumidorasLayout.setHorizontalGroup(
            pnlUnidadesConsumidorasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUnidadesConsumidorasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlUnidadesConsumidorasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(pnlUnidadesConsumidorasLayout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlUnidadesConsumidorasLayout.setVerticalGroup(
            pnlUnidadesConsumidorasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUnidadesConsumidorasLayout.createSequentialGroup()
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlBotoes.setBorder(javax.swing.BorderFactory.createTitledBorder("Ação"));

        jButton1.setText("jButton1");

        btnIncluirUnidadeConsumidora.setText("Incluir Unidade Consumidora");
        btnIncluirUnidadeConsumidora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncluirUnidadeConsumidoraActionPerformed(evt);
            }
        });

        btnGravarUnidadeConsumidora.setText("Gravar Unidade Consumidora");
        btnGravarUnidadeConsumidora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGravarUnidadeConsumidoraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBotoesLayout = new javax.swing.GroupLayout(pnlBotoes);
        pnlBotoes.setLayout(pnlBotoesLayout);
        pnlBotoesLayout.setHorizontalGroup(
            pnlBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBotoesLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(btnIncluirUnidadeConsumidora)
                .addGap(18, 18, 18)
                .addComponent(btnGravarUnidadeConsumidora)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlBotoesLayout.setVerticalGroup(
            pnlBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton1)
            .addGroup(pnlBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnIncluirUnidadeConsumidora)
                .addComponent(btnGravarUnidadeConsumidora))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlUnidadesConsumidoras, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlUnidadesConsumidoras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnIncluirUnidadeConsumidoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncluirUnidadeConsumidoraActionPerformed
        this.AdicionaUnidadeConsumidora();
    }//GEN-LAST:event_btnIncluirUnidadeConsumidoraActionPerformed

    private void btnGravarUnidadeConsumidoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGravarUnidadeConsumidoraActionPerformed
        this.PersistUnidadeConsumidora();
    }//GEN-LAST:event_btnGravarUnidadeConsumidoraActionPerformed

    private void tblUCKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblUCKeyPressed
        if ((evt.getKeyChar() == KeyEvent.VK_ENTER)) {
            this.AbrirConsumosEnergeticos((int) tblUC.getValueAt(tblUC.getSelectedRow(), 0));
            evt.consume();
        }
    }//GEN-LAST:event_tblUCKeyPressed

    private void tblUCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUCMouseClicked
        if (evt.getClickCount() == 2) {
            this.AbrirConsumosEnergeticos((int) tblUC.getValueAt(tblUC.getSelectedRow(), 0));
        }
    }//GEN-LAST:event_tblUCMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DlgUnidadeConsumidora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            DlgUnidadeConsumidora dialog = new DlgUnidadeConsumidora(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGravarUnidadeConsumidora;
    private javax.swing.JButton btnIncluirUnidadeConsumidora;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnlBotoes;
    private javax.swing.JPanel pnlUnidadesConsumidoras;
    private javax.swing.JTable tblUC;
    // End of variables declaration//GEN-END:variables

    private void InicialFormulario() {
        this.setTitle(
                this.getTitle()
                        .concat(" do endereço ")
                        .concat(this.endereco.getCEP())
                        .concat(", ")
                        .concat(this.endereco.getLogradouro())
                        .concat(", ")
                        .concat(this.endereco.getCidade())
                        .concat("(")
                        .concat(this.endereco.getUF().toString())
                        .concat(")")
        );
        this.setUnidadesConsumidoras(unidadesConsumidoras);
        Utilitarios.RePosicionaBotoes(new JButton[]{btnIncluirUnidadeConsumidora, btnGravarUnidadeConsumidora}, pnlBotoes, 233, true);
        this.FirstRun = false;
    }

    private void PopulaJTableUnidadesConsumidoras() {
        List<UnidadeConsumidora> UCs = this.getUnidadesConsumidoras();
        String[] colunas = new String[]{"Id", "Número", "Tipo de Ligação", "Número Medidor"};
        Object[][] dados = new Object[UCs.size()][colunas.length];
        for (int linha = 0; linha < UCs.size(); linha++) {
            int coluna = 0;
            dados[linha][coluna++] = UCs.get(linha).getId();
            dados[linha][coluna++] = UCs.get(linha).getNumero();
            dados[linha][coluna++] = UCs.get(linha).getTipoDeLigacao().toString();
            dados[linha][coluna++] = UCs.get(linha).getNumeroMedidor();
        }
        DefaultTableModel mdl = new DefaultTableModel(dados, colunas) {
            boolean[] canEdit = new boolean[]{
                false, true, true, true
            };

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        };
        tblUC.setModel(mdl);
        tblUC.setAutoCreateRowSorter(true);
        tblUC.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tblUC.setShowGrid(true);
        tblUC.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        int xx = 0;
        tblUC.getColumnModel().getColumn(xx++).setPreferredWidth((int) (tblUC.getParent().getWidth() * 0.04));
        tblUC.getColumnModel().getColumn(xx++).setPreferredWidth((int) (tblUC.getParent().getWidth() * 0.35));
        tblUC.getColumnModel().getColumn(xx).setCellEditor(new DefaultCellEditor(new JComboBox(Enumeradors.TipoSaidaAC.values())));
        tblUC.getColumnModel().getColumn(xx++).setPreferredWidth((int) (tblUC.getParent().getWidth() * 0.16));
        tblUC.getColumnModel().getColumn(xx++).setPreferredWidth((int) (tblUC.getParent().getWidth() * 0.40));
    }

    private void AdicionaUnidadeConsumidora() {
        this.unidadesConsumidoras.removeAll(this.getUnidadesConsumidoras());
        List<UnidadeConsumidora> UCs = new ArrayList<>();
        for (int i = 0; i < tblUC.getRowCount(); i++) {
            UnidadeConsumidora uc = new UnidadeConsumidora();
            int z = 0;
            uc.setId((int) tblUC.getValueAt(i, z++));
            uc.setNumero((String) tblUC.getValueAt(i, z++));
            uc.setTipoDeLigacao(Enumeradors.TipoSaidaAC.valueOf(String.valueOf(tblUC.getValueAt(i, z++))));
            uc.setNumeroMedidor((String) tblUC.getValueAt(i, z++));
            uc.setEndereco(this.endereco);
            UCs.add(uc);
        }
        UnidadeConsumidora uc = new UnidadeConsumidora();
        uc.setId(0);
        UCs.add(uc);
        this.setUnidadesConsumidoras(UCs);
    }

    private void PersistUnidadeConsumidora() {
        this.unidadesConsumidoras.removeAll(this.getUnidadesConsumidoras());
        for (int i = 0; i < tblUC.getRowCount(); i++) {
            int k = 0;
            UnidadeConsumidora uc = new UnidadeConsumidora();
            uc.setId((int) tblUC.getValueAt(i, k++));
            uc.setNumero((String) tblUC.getValueAt(i, k++));
            uc.setTipoDeLigacao(Enumeradors.TipoSaidaAC.valueOf(String.valueOf(tblUC.getValueAt(i, k++))));
            uc.setNumeroMedidor((String) tblUC.getValueAt(i, k++));
            uc.setEndereco(this.endereco);
            UnidadeConsumidoraCTRL.Gravar(uc);
        }
        this.setUnidadesConsumidoras(UnidadeConsumidoraCTRL.BuscarPorEndereco(this.endereco));
    }

    private void AbrirConsumosEnergeticos(int pId) {
        if (pId > 0) {
            DlgConsumoEnergetico dlg = new DlgConsumoEnergetico(null, true, UnidadeConsumidoraCTRL.BuscarPorId(pId));
            dlg.setVisible(true);
            dlg.toFront();
        }
    }
}
