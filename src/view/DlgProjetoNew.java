/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ClienteCTRL;
import controller.InversorCTRL;
import controller.ItemProjetoCTRL;
import controller.ModuloCTRL;
import controller.ProjetoCTRL;
import controller.StatusCTRL;
import java.awt.HeadlessException;
import java.sql.Date;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import model.bean.Cliente;
import model.bean.Inversor;
import model.bean.ItemProjeto;
import model.bean.Modulo;
import model.bean.NecessidadeEnergeticaCliente;
import model.bean.Projeto;
import model.bean.Status;
import utils.IconManager;
import utils.ManagerJasperReport;
import utils.Utilitarios;

/**
 *
 * @author KAI
 */
public class DlgProjetoNew extends javax.swing.JDialog {

    private boolean FirstRun = true;
    private Projeto pProjeto;
    private double ConsumoCliente;

    /**
     * Creates new form DlgProjetoNew
     *
     * @param parent
     * @param modal
     */
    public DlgProjetoNew(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public DlgProjetoNew(java.awt.Frame parent, boolean modal, Projeto pProjeto) {
        super(parent, modal);
        initComponents();

        this.ConsumoCliente = 0.0;
        this.pProjeto = pProjeto;
        this.IniciaForm();

        this.FirstRun = false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlGeral = new javax.swing.JPanel();
        btnBuscarCliente = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtDataPrevisao = new com.toedter.calendar.JDateChooser();
        txtProdutos = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JFormattedTextField();
        txtId = new javax.swing.JTextField();
        txtConclusao = new com.toedter.calendar.JDateChooser();
        jLabel11 = new javax.swing.JLabel();
        txtCliente = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtDescontos = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        txtAcrescimos = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        cbStatus = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtDataCadastro = new javax.swing.JTextField();
        txtDataUltimaAlteracao = new javax.swing.JTextField();
        pnlBotoes = new javax.swing.JPanel();
        btnGravar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnImprimiFichaProjeto = new javax.swing.JButton();
        pnlInversores = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblIEInversores = new javax.swing.JTable();
        btnInversorAdd = new javax.swing.JButton();
        btnInversorRem = new javax.swing.JButton();
        pnlModulos = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblIEModulos = new javax.swing.JTable();
        btnModuloAdd = new javax.swing.JButton();
        btnModuloRem = new javax.swing.JButton();
        lblNecessidadeEnergetica = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Projeto Irradiacação Solarimétrica");

        pnlGeral.setBorder(javax.swing.BorderFactory.createTitledBorder("Geral"));

        btnBuscarCliente.setText("Buscar");
        btnBuscarCliente.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarClienteActionPerformed(evt);
            }
        });

        jLabel7.setText("Descontos:");

        jLabel10.setText("Produtos:");

        jLabel8.setText("Acréscimos:");

        txtProdutos.setEditable(false);
        txtProdutos.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtProdutos.setEnabled(false);

        jLabel9.setText("Status:");

        txtTotal.setEditable(false);
        txtTotal.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtTotal.setEnabled(false);

        txtId.setEditable(false);
        txtId.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtId.setEnabled(false);

        jLabel11.setText("Total:");

        txtCliente.setEditable(false);
        txtCliente.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtCliente.setEnabled(false);

        jLabel1.setText("Id:");

        jLabel2.setText("Cadastro:");

        jLabel3.setText("Alteração:");

        jLabel4.setText("Cliente:");

        jLabel5.setText("Previsão:");

        jLabel6.setText("Conslusão:");

        txtDataCadastro.setEditable(false);
        txtDataCadastro.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtDataCadastro.setEnabled(false);

        txtDataUltimaAlteracao.setEditable(false);
        txtDataUltimaAlteracao.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtDataUltimaAlteracao.setEnabled(false);

        javax.swing.GroupLayout pnlGeralLayout = new javax.swing.GroupLayout(pnlGeral);
        pnlGeral.setLayout(pnlGeralLayout);
        pnlGeralLayout.setHorizontalGroup(
            pnlGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGeralLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlGeralLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDataPrevisao, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtConclusao, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlGeralLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDataCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDataUltimaAlteracao, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlGeralLayout.createSequentialGroup()
                        .addGroup(pnlGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(pnlGeralLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCliente))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlGeralLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDescontos, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtAcrescimos, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel11)))
                        .addGroup(pnlGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlGeralLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlGeralLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(btnBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pnlGeralLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, jLabel10, jLabel4, jLabel5});

        pnlGeralLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel6, jLabel7, jLabel9});

        pnlGeralLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel2, jLabel8});

        pnlGeralLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel11, jLabel3});

        pnlGeralLayout.setVerticalGroup(
            pnlGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGeralLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(cbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtDataCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtDataUltimaAlteracao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBuscarCliente)
                    .addGroup(pnlGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(txtDataPrevisao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtConclusao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtDescontos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txtAcrescimos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlBotoes.setBorder(javax.swing.BorderFactory.createTitledBorder("Ação"));

        btnGravar.setText("Gravar");
        btnGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGravarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Fechar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnImprimiFichaProjeto.setText("Ficha");
        btnImprimiFichaProjeto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimiFichaProjetoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBotoesLayout = new javax.swing.GroupLayout(pnlBotoes);
        pnlBotoes.setLayout(pnlBotoesLayout);
        pnlBotoesLayout.setHorizontalGroup(
            pnlBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnGravar, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnImprimiFichaProjeto, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pnlBotoesLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCancelar, btnGravar, btnImprimiFichaProjeto});

        pnlBotoesLayout.setVerticalGroup(
            pnlBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnGravar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnImprimiFichaProjeto)
                .addContainerGap())
        );

        pnlInversores.setBorder(javax.swing.BorderFactory.createTitledBorder("Inversores"));

        tblIEInversores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblIEInversores);

        btnInversorAdd.setText("Adicionar");
        btnInversorAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInversorAddActionPerformed(evt);
            }
        });

        btnInversorRem.setText("Remover");
        btnInversorRem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInversorRemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlInversoresLayout = new javax.swing.GroupLayout(pnlInversores);
        pnlInversores.setLayout(pnlInversoresLayout);
        pnlInversoresLayout.setHorizontalGroup(
            pnlInversoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInversoresLayout.createSequentialGroup()
                .addGroup(pnlInversoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnInversorRem, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnInversorAdd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1))
        );
        pnlInversoresLayout.setVerticalGroup(
            pnlInversoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInversoresLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnInversorAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnInversorRem, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        pnlModulos.setBorder(javax.swing.BorderFactory.createTitledBorder("Módulos"));

        tblIEModulos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblIEModulos);

        btnModuloAdd.setText("Adiciona");
        btnModuloAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModuloAddActionPerformed(evt);
            }
        });

        btnModuloRem.setText("Remover");
        btnModuloRem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModuloRemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlModulosLayout = new javax.swing.GroupLayout(pnlModulos);
        pnlModulos.setLayout(pnlModulosLayout);
        pnlModulosLayout.setHorizontalGroup(
            pnlModulosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlModulosLayout.createSequentialGroup()
                .addGroup(pnlModulosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnModuloAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnModuloRem, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2))
        );
        pnlModulosLayout.setVerticalGroup(
            pnlModulosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlModulosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnModuloAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnModuloRem, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        lblNecessidadeEnergetica.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNecessidadeEnergetica.setText("Necessidade energética:");
        lblNecessidadeEnergetica.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblNecessidadeEnergetica.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNecessidadeEnergetica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlInversores, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlModulos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlGeral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlGeral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblNecessidadeEnergetica)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlModulos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlInversores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarClienteActionPerformed
        DlgPesquisaEntidade dlg = new DlgPesquisaEntidade(null, true, Cliente.class, null, null, true);
        dlg.setVisible(true);
        dlg.toFront();
        int id = dlg.getIdSelecionado();
        if (id > 0) {
            this.pProjeto.setCliente(ClienteCTRL.BuscarPorId(1, dlg.getIdSelecionado(), null));
            txtCliente.setText(this.pProjeto.getCliente().toString());
            this.SetaNecessidadeEnergeticaCliente();
        }

    }//GEN-LAST:event_btnBuscarClienteActionPerformed

    private void btnGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGravarActionPerformed
        this.GravarProjeto();
    }//GEN-LAST:event_btnGravarActionPerformed

    private void btnInversorAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInversorAddActionPerformed
        DlgPesquisaEntidade dlg = new DlgPesquisaEntidade(null, true, Inversor.class, null, null, true);
        dlg.setVisible(true);
        dlg.toFront();
        int id = dlg.getIdSelecionado();
        if (id > 0) {
            ItemProjeto ip = new ItemProjeto();
            ip.setInversor(InversorCTRL.BuscaPorId(id));

            ip.setQuantidade(
                    (int) ((this.PercorreJTableInversoresParaPegarPotenciasDeModulos() / ip.getInversor().getPotenciaWCA()))
                    + 1
            );

            ip.setValorUnitario(ip.getInversor().getValorVenda());
            ip.setProjeto(this.pProjeto);
            ip.setValorTotal(ip.getQuantidade() * ip.getValorUnitario());
            this.AtualizaItens(ip, null, -1, -1);
            this.PopulaJTableInvesores();
        }
    }//GEN-LAST:event_btnInversorAddActionPerformed

    private void btnModuloAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModuloAddActionPerformed
        DlgPesquisaEntidade dlg = new DlgPesquisaEntidade(null, true, Modulo.class, null, null, true);
        dlg.setVisible(true);
        dlg.toFront();
        int id = dlg.getIdSelecionado();
        if (id > 0) {
            ItemProjeto ip = new ItemProjeto();
            ip.setModulo(ModuloCTRL.BuscaPorId(id));
            ip.setValorUnitario(ip.getModulo().getValorVenda());

            int qtde = 0;
            double ResultadoBruto
                    = (this.ConsumoCliente - this.PercorreJTableModulosParaPegarPotencias()) / ip.getModulo().getPMaxWp();
            int ResultadoInteiro = (int) ResultadoBruto;
            ip.setQuantidade((((ResultadoBruto - ResultadoInteiro) > 0 ? 1 : 0) + ResultadoInteiro));

            ip.setValorTotal(ip.getModulo().getValorVenda() * ip.getQuantidade());
            ip.setProjeto(this.pProjeto);
            this.AtualizaItens(null, ip, -1, -1);
            this.PopulaJTableModulos();
        }
    }//GEN-LAST:event_btnModuloAddActionPerformed

    private void btnInversorRemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInversorRemActionPerformed
        try {
            int i = Integer.valueOf("" + tblIEInversores.getValueAt(tblIEInversores.getSelectedRow(), 0));
            if (JOptionPane.showConfirmDialog(null, "Deseja realmente Deletar este registro?", "<<< ATENÇÃO >>>", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {
                this.AtualizaItens(null, null, i, -1);
                this.PopulaJTableInvesores();
            }
        } catch (HeadlessException | NumberFormatException e) {
            Utilitarios.MsgExcecao("Erro ao tentar buscar Excluir um ItemProjeto: " + e);
            Logger.getLogger(ItemProjeto.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_btnInversorRemActionPerformed

    private void btnModuloRemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModuloRemActionPerformed
        try {
            int i = Integer.valueOf("" + tblIEModulos.getValueAt(tblIEModulos.getSelectedRow(), 0));
            if (JOptionPane.showConfirmDialog(null, "Deseja realmente Deletar este registro?", "<<< ATENÇÃO >>>", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {
                this.AtualizaItens(null, null, -1, i);
                this.PopulaJTableModulos();
            }
        } catch (HeadlessException | NumberFormatException e) {
            Utilitarios.MsgExcecao("Erro ao tentar buscar Excluir um ItemProjeto: " + e);
            Logger.getLogger(ItemProjeto.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_btnModuloRemActionPerformed

    private void btnImprimiFichaProjetoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimiFichaProjetoActionPerformed
        Map params = new HashMap();
        params.put("pProj", this.pProjeto.getId());
        params.put("idProj", this.pProjeto.getId());
        params.put("idCliente", this.pProjeto.getCliente().getId());
//        new ManagerJasperReport().ExecutaRelatorio("ProjetoNew", "Projeto", params);
        new ManagerJasperReport().ExecutaRelatorio("New_Projeto", "Projeto", params);
    }//GEN-LAST:event_btnImprimiFichaProjetoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DlgProjetoNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            DlgProjetoNew dialog = new DlgProjetoNew(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarCliente;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGravar;
    private javax.swing.JButton btnImprimiFichaProjeto;
    private javax.swing.JButton btnInversorAdd;
    private javax.swing.JButton btnInversorRem;
    private javax.swing.JButton btnModuloAdd;
    private javax.swing.JButton btnModuloRem;
    private javax.swing.JComboBox<model.bean.Status> cbStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblNecessidadeEnergetica;
    private javax.swing.JPanel pnlBotoes;
    private javax.swing.JPanel pnlGeral;
    private javax.swing.JPanel pnlInversores;
    private javax.swing.JPanel pnlModulos;
    private javax.swing.JTable tblIEInversores;
    private javax.swing.JTable tblIEModulos;
    private javax.swing.JFormattedTextField txtAcrescimos;
    private javax.swing.JTextField txtCliente;
    private com.toedter.calendar.JDateChooser txtConclusao;
    private javax.swing.JTextField txtDataCadastro;
    private com.toedter.calendar.JDateChooser txtDataPrevisao;
    private javax.swing.JTextField txtDataUltimaAlteracao;
    private javax.swing.JFormattedTextField txtDescontos;
    private javax.swing.JTextField txtId;
    private javax.swing.JFormattedTextField txtProdutos;
    private javax.swing.JFormattedTextField txtTotal;
    // End of variables declaration//GEN-END:variables

    private void IniciaForm() {
        new IconManager().SetaIcones(new JButton[]{
            btnGravar, btnCancelar, btnBuscarCliente,
            btnInversorAdd, btnInversorRem, btnModuloAdd, btnModuloRem
        });

        for (JButton b_ : new JButton[]{btnInversorAdd, btnInversorRem, btnModuloAdd, btnModuloRem}) {
            b_.setText("");
        }

        StatusCTRL.BuscaTodos().forEach((Status sts) -> {
            cbStatus.addItem(sts);
        });

        this.PreencheCamposComObjProjeto();
    }

    private void GravarProjeto() {
        this.PreencheObjProjetoComCampos();
        this.AtualizaItens(null, null, -1, -1);
        this.pProjeto = ProjetoCTRL.Gravar(this.pProjeto);
        this.PreencheCamposComObjProjeto();
    }

    private void PreencheCamposComObjProjeto() {
//        System.out.println(
//                this.FirstRun ? "FirstRun(T)" : "FirstRun(F)"
//                        + ", "
//                        + this.pProjeto.toString()
//        );

        txtId.setText(String.valueOf(this.pProjeto.getId()));
        txtAcrescimos.setText(String.valueOf(this.pProjeto.getAcrescimo()).replace(",", "").replace(".", ","));
        txtDescontos.setText(String.valueOf(this.pProjeto.getDesconto()).replace(",", "").replace(".", ","));
        txtProdutos.setText(String.valueOf(this.pProjeto.getTotalProdutos()).replace(",", "").replace(".", ","));
        txtTotal.setText(String.valueOf(this.pProjeto.getTotalLiquido()).replace(",", "").replace(".", ","));
        if (this.pProjeto.getCliente() != null) {
            txtCliente.setText(this.pProjeto.getCliente().toString());
//            lblNecessidadeEnergetica.setText(ClienteCTRL.BuscaNecessidadeEnergetica(this.pProjeto.getCliente().getId()).asString());
            this.SetaNecessidadeEnergeticaCliente();
        }
        txtConclusao.setDate(this.pProjeto.getConclusao());
        txtDataCadastro.setText(String.valueOf(this.pProjeto.getDataCadastro()));
        txtDataUltimaAlteracao.setText(String.valueOf(this.pProjeto.getDataUltimaAlteracao()));
        txtDataPrevisao.setDate(this.pProjeto.getPrevisaoEntrega());
        cbStatus.setSelectedItem(!this.pProjeto.IsNew() ? this.pProjeto.getStatus() : StatusCTRL.BuscaPorId(1));

        this.PopulaJTableInvesores();
        this.PopulaJTableModulos();
    }

    private void PopulaJTableInvesores() {
        List<ItemProjeto> itens = new ArrayList<>();
        if (this.pProjeto.getItens() != null) {
            for (ItemProjeto item : this.pProjeto.getItens()) {
                if (item.getInversor() != null) {
                    itens.add(item);
                }
            }
        }

        String[] colunas = "Id,Id.I,Modelo,Valor,Quantidade,Total".split(",");

        Object[][] dados = new Object[itens.size()][colunas.length];
        for (int linha = 0; linha < itens.size(); linha++) {
            int coluna = 0;
            dados[linha][coluna++] = itens.get(linha).getId();
            dados[linha][coluna++] = itens.get(linha).getInversor().getId();
            dados[linha][coluna++] = itens.get(linha).getInversor().getModelo();
            dados[linha][coluna++] = String.valueOf(itens.get(linha).getValorUnitario()).replace(",", "").replace(".", ",");
            dados[linha][coluna++] = itens.get(linha).getQuantidade();
            dados[linha][coluna++] = String.valueOf(itens.get(linha).getValorUnitario() * itens.get(linha).getQuantidade()).replace(",", "").replace(".", ",");
        }
        DefaultTableModel mdl = new DefaultTableModel(dados, colunas) {
            boolean[] canEdit = new boolean[]{
                false, false, false, true, true, false
            };

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        };
        tblIEInversores.setModel(mdl);
        tblIEInversores.setAutoCreateRowSorter(true);
        tblIEInversores.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tblIEInversores.setShowGrid(true);
        tblIEInversores.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        int xx = 0;
        tblIEInversores.getColumnModel().getColumn(xx++).setPreferredWidth((int) (tblIEInversores.getParent().getWidth() * 0.05));
        tblIEInversores.getColumnModel().getColumn(xx++).setPreferredWidth((int) (tblIEInversores.getParent().getWidth() * 0.05));
        tblIEInversores.getColumnModel().getColumn(xx++).setPreferredWidth((int) (tblIEInversores.getParent().getWidth() * 0.50));
        tblIEInversores.getColumnModel().getColumn(xx++).setPreferredWidth((int) (tblIEInversores.getParent().getWidth() * 0.15));
        tblIEInversores.getColumnModel().getColumn(xx++).setPreferredWidth((int) (tblIEInversores.getParent().getWidth() * 0.10));
        tblIEInversores.getColumnModel().getColumn(xx++).setPreferredWidth((int) (tblIEInversores.getParent().getWidth() * 0.15));
    }

    private void PopulaJTableModulos() {
        List<ItemProjeto> itens = new ArrayList<>();

        if (this.pProjeto.getItens() != null) {
            for (ItemProjeto item : this.pProjeto.getItens()) {
                if (item.getModulo() != null) {
                    itens.add(item);
                }
            }
        }

        String[] colunas = "Id,Id.M,Modelo,Valor,Quantidade,Total".split(",");

        Object[][] dados = new Object[itens.size()][colunas.length];
        for (int linha = 0; linha < itens.size(); linha++) {
            int coluna = 0;
            dados[linha][coluna++] = itens.get(linha).getId();
            dados[linha][coluna++] = itens.get(linha).getModulo().getId();
            dados[linha][coluna++] = itens.get(linha).getModulo().getModelo();
            dados[linha][coluna++] = String.valueOf(itens.get(linha).getValorUnitario()).replace(",", "").replace(".", ",");
            dados[linha][coluna++] = itens.get(linha).getQuantidade();
            dados[linha][coluna++] = String.valueOf(itens.get(linha).getValorUnitario() * itens.get(linha).getQuantidade()).replace(",", "").replace(".", ",");
        }
//        Class[] tpClass = new Class[]{
//            Integer.class,
//            Integer.class,
//            String.class,
//            Double.class,
//            Integer.class,
//            Double.class
//        };
        DefaultTableModel mdl = new DefaultTableModel(dados, colunas) {
            boolean[] canEdit = new boolean[]{
                false, false, false, true, true, false
            };

//            @Override
//            public Class getColumnClass(int columnIndex) {
//                return tpClass[columnIndex];
//            }
            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        };
        tblIEModulos.setModel(mdl);
        tblIEModulos.setAutoCreateRowSorter(true);
        tblIEModulos.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tblIEModulos.setShowGrid(true);
        tblIEModulos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        javax.swing.JFormattedTextField txtDouble = new javax.swing.JFormattedTextField();
        txtDouble.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));

        javax.swing.JFormattedTextField txtInteiro = new javax.swing.JFormattedTextField();
        txtInteiro.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        int xx = 0;
        tblIEModulos.getColumnModel().getColumn(xx++).setPreferredWidth((int) (tblIEModulos.getParent().getWidth() * 0.05));
        tblIEModulos.getColumnModel().getColumn(xx++).setPreferredWidth((int) (tblIEModulos.getParent().getWidth() * 0.05));
        tblIEModulos.getColumnModel().getColumn(xx++).setPreferredWidth((int) (tblIEModulos.getParent().getWidth() * 0.50));
        tblIEModulos.getColumnModel().getColumn(3).setCellEditor(new DefaultCellEditor(txtDouble));
        tblIEModulos.getColumnModel().getColumn(xx++).setPreferredWidth((int) (tblIEModulos.getParent().getWidth() * 0.15));
        tblIEModulos.getColumnModel().getColumn(4).setCellEditor(new DefaultCellEditor(txtInteiro));
        tblIEModulos.getColumnModel().getColumn(xx++).setPreferredWidth((int) (tblIEModulos.getParent().getWidth() * 0.10));
        tblIEModulos.getColumnModel().getColumn(5).setCellEditor(new DefaultCellEditor(txtDouble));
        tblIEModulos.getColumnModel().getColumn(xx++).setPreferredWidth((int) (tblIEModulos.getParent().getWidth() * 0.15));
    }

    private void AtualizaItens(ItemProjeto New_Inversor, ItemProjeto New_Modulo, int IdInversorExcluir, int IdModuloExcluir) {
        List<ItemProjeto> itens = new ArrayList<>();

        for (int i = 0; i < tblIEInversores.getRowCount(); i++) {
            ItemProjeto item = new ItemProjeto();
            item.setProjeto(this.pProjeto);
            item.setId(Integer.valueOf("" + tblIEInversores.getValueAt(i, 0)));
            item.setInversor(InversorCTRL.BuscaPorId(Integer.valueOf("" + tblIEInversores.getValueAt(i, 1))));
            item.setValorUnitario(Utilitarios.ConverteTextoEmDouble("" + tblIEInversores.getValueAt(i, 3)));
            item.setQuantidade(Utilitarios.ConverteTextoEmInteiro("" + tblIEInversores.getValueAt(i, 4)));

            if (IdInversorExcluir > -1) {
                if (IdInversorExcluir == item.getId() /*&& item.getId() > 0*/) {
                    ItemProjetoCTRL.Deletar(IdInversorExcluir);
                } else {
                    itens.add(item);
                }
            } else {
                itens.add(item);
            }
        }

        for (int i = 0; i < tblIEModulos.getRowCount(); i++) {
            ItemProjeto item = new ItemProjeto();
            item.setProjeto(this.pProjeto);
            item.setId(Integer.valueOf("" + tblIEModulos.getValueAt(i, 0)));
            item.setModulo(ModuloCTRL.BuscaPorId(Integer.valueOf("" + tblIEModulos.getValueAt(i, 1))));
            item.setValorUnitario(Utilitarios.ConverteTextoEmDouble("" + tblIEModulos.getValueAt(i, 3)));
            item.setQuantidade(Utilitarios.ConverteTextoEmInteiro("" + tblIEModulos.getValueAt(i, 4)));

            if (IdModuloExcluir > -1) {
                if (IdModuloExcluir == item.getId() /*&& item.getId() > 0*/) {
                    ItemProjetoCTRL.Deletar(IdModuloExcluir);
                } else {
                    itens.add(item);
                }
            } else {
                itens.add(item);
            }
        }

        if (New_Inversor != null) {
            itens.add(New_Inversor);
        }
        if (New_Modulo != null) {
            itens.add(New_Modulo);
        }

        this.pProjeto.setItens(itens);

//        this.pProjeto.getItens().forEach((ItemProjeto ip)->{
//            System.out.println(ip.asString());
//        });
    }

    private void PreencheObjProjetoComCampos() {
        this.pProjeto.setAcrescimo(Utilitarios.ConverteTextoEmDouble(txtAcrescimos.getText()));
        this.pProjeto.setDesconto(Utilitarios.ConverteTextoEmDouble(txtDescontos.getText()));
        if (txtConclusao.getDate() != null) {
            this.pProjeto.setConclusao(new Date(txtConclusao.getDate().getYear(), txtConclusao.getDate().getMonth(), txtConclusao.getDate().getDay()));
        }
        if (txtDataPrevisao.getDate() != null) {
            this.pProjeto.setPrevisaoEntrega(new Date(txtDataPrevisao.getDate().getYear(), txtDataPrevisao.getDate().getMonth(), txtDataPrevisao.getDate().getDay()));
        }
        this.pProjeto.setId(Integer.valueOf(txtId.getText()));
        this.pProjeto.setStatus((Status) cbStatus.getSelectedItem());
    }

    private void SetaNecessidadeEnergeticaCliente() {
        NecessidadeEnergeticaCliente nec = ClienteCTRL.BuscaNecessidadeEnergetica(this.pProjeto.getCliente().getId());
        lblNecessidadeEnergetica.setText(nec.asString());
        this.ConsumoCliente = nec.getCalc2();
    }

    private double PercorreJTableModulosParaPegarPotencias() {
        double PotenciasAcumuladas = 0;
        for (int i = 0; i < tblIEModulos.getRowCount(); i++) {
            PotenciasAcumuladas
                    += ModuloCTRL.BuscaPorId(Integer.valueOf("" + tblIEModulos.getValueAt(i, 1))).getPMaxWp()
                    * Integer.valueOf("" + tblIEModulos.getValueAt(i, 4));
        }
        return PotenciasAcumuladas;
    }

    private double PercorreJTableInversoresParaPegarPotenciasDeModulos() {
        double PotenciasAcumuladas = 0;
        for (int i = 0; i < tblIEInversores.getRowCount(); i++) {
            PotenciasAcumuladas
                    += InversorCTRL.BuscaPorId(Integer.valueOf("" + tblIEInversores.getValueAt(i, 1))).getPotenciaWCA()
                    * Integer.valueOf("" + tblIEInversores.getValueAt(i, 4));
        }
        return this.PercorreJTableModulosParaPegarPotencias() - PotenciasAcumuladas;
    }
}
